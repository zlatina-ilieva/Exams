using System;

class Lines
{
    static void Main()
    {
        int num0 = int.Parse(Console.ReadLine());
        int num1 = int.Parse(Console.ReadLine());
        int num2 = int.Parse(Console.ReadLine());
        int num3 = int.Parse(Console.ReadLine());
        int num4 = int.Parse(Console.ReadLine());
        int num5 = int.Parse(Console.ReadLine());
        int num6 = int.Parse(Console.ReadLine());
        int num7 = int.Parse(Console.ReadLine());
        int bestLen = 0;
        int bestCount = 0;
        for (int row = 0; row <= 7; row++)
        {
            int rowBits = 0;
            switch (row)
            {
                case 0: rowBits = num0; break;
                case 1: rowBits = num1; break;
                case 2: rowBits = num2; break;
                case 3: rowBits = num3; break;
                case 4: rowBits = num4; break;
                case 5: rowBits = num5; break;
                case 6: rowBits = num6; break;
                case 7: rowBits = num7; break;
            }
            int len = 0;
            for (int col = 0; col <= 7; col++)
            {
                int cell = (rowBits >> col) & 1;
                if (cell == 1)
                {
                    len++;
                    if (len > bestLen)
                    {
                        bestLen = len;
                        bestCount = 0;
                    }
                    if (len == bestLen)
                    {
                        bestCount++;
                    }
                }
                else
                {
                    len = 0;
                }
            }
        }
        for (int col = 0; col <= 7; col++)
        {
            int len = 0;
            for (int row = 0; row <= 7; row++)
            {
                int rowBits = 0;
                switch (row)
                {
                    case 0: rowBits = num0; break;
                    case 1: rowBits = num1; break;
                    case 2: rowBits = num2; break;
                    case 3: rowBits = num3; break;
                    case 4: rowBits = num4; break;
                    case 5: rowBits = num5; break;
                    case 6: rowBits = num6; break;
                    case 7: rowBits = num7; break;
                }
                int cell = (rowBits >> col) & 1;
                if (cell == 1)
                {
                    len++;
                    if (len > bestLen)
                    {
                        bestLen = len;
                        bestCount = 0;
                    }
                    if (len == bestLen)
                    {
                        bestCount++;
                    }
                }
                else
                {
                    len = 0;
                }
            }
        }
        if (bestLen == 1)
        {
            bestCount = bestCount / 2;
        }
        Console.WriteLine(bestLen);
        Console.WriteLine(bestCount);
    }
}


